From c7aedfbdf97717e2e8a339414d66cb416f18b8e8 Mon Sep 17 00:00:00 2001
From: Leslie Zhai <xiangzhai83@gmail.com>
Date: Sat, 1 Aug 2015 14:39:41 +0800
Subject: [PATCH 39/46] Add listCachedUserAsync API

---
 src/accountsservice/accountsmanager.cpp | 27 +++++++++++++++++++++++++++
 src/accountsservice/accountsmanager.h   |  2 ++
 2 files changed, 29 insertions(+)

diff --git a/src/accountsservice/accountsmanager.cpp b/src/accountsservice/accountsmanager.cpp
index 17a8851..acb29d8 100644
--- a/src/accountsservice/accountsmanager.cpp
+++ b/src/accountsservice/accountsmanager.cpp
@@ -180,6 +180,33 @@ UserAccountList AccountsManager::listCachedUsers()
 }
 
 /*!
+    Cached a list of user accounts.
+    Async unblocking API.
+*/
+void AccountsManager::listCachedUsersAsync()
+{
+    Q_D(AccountsManager);
+
+    QDBusPendingCall call = d->interface->ListCachedUsers();
+    QDBusPendingCallWatcher *watcher = new QDBusPendingCallWatcher(call, this);
+    connect(watcher, &QDBusPendingCallWatcher::finished, this, [=](QDBusPendingCallWatcher *w) {
+        QDBusPendingReply< QList<QDBusObjectPath> > reply = *w;
+        w->deleteLater();
+        if (reply.isError()) {
+            QDBusError error = reply.error();
+            qWarning("Couldn't list cached users: %s",
+                     error.errorString(error.type()).toUtf8().constData());
+        } else {
+            UserAccountList userList;
+            QList<QDBusObjectPath> value = reply.argumentAt<0>();
+            for (int i = 0; i < value.size(); i++)
+                userList.append(new UserAccount(value.at(i).path(), d->interface->connection()));
+            Q_EMIT listCachedUsersFinished(userList);
+        }
+    });
+}
+
+/*!
     Finds a user by \a uid.
 
     \param uid The uid to look up.
diff --git a/src/accountsservice/accountsmanager.h b/src/accountsservice/accountsmanager.h
index 7a72cca..88702d9 100644
--- a/src/accountsservice/accountsmanager.h
+++ b/src/accountsservice/accountsmanager.h
@@ -50,6 +50,7 @@ public:
     void uncacheUser(UserAccount *account);
 
     UserAccountList listCachedUsers();
+    void listCachedUsersAsync();
 
     UserAccount *findUserById(uid_t uid);
     UserAccount *findUserByName(const QString &userName);
@@ -65,6 +66,7 @@ Q_SIGNALS:
     void userAdded(UserAccount *);
     void userDeleted(UserAccount *);
     void userCached(UserAccount *);
+    void listCachedUsersFinished(UserAccountList userList);
 
 protected:
     AccountsManagerPrivate *d_ptr;
-- 
1.9.5

