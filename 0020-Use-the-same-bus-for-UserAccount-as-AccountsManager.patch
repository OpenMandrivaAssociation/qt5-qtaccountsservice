From 27791f18ee43b470d4f46c5256e6c9d64383ff9d Mon Sep 17 00:00:00 2001
From: Pier Luigi Fiorini <pierluigi.fiorini@gmail.com>
Date: Fri, 31 Jul 2015 07:17:58 +0200
Subject: [PATCH 20/46] Use the same bus for UserAccount as AccountsManager

For unit tests we need to use the session bus rather than the
system bus. Make UserAccount use the same connection as AccountsManager.

Issue: #6
---
 src/accountsservice/accountsmanager.cpp | 12 ++++++------
 src/accountsservice/useraccount.cpp     | 18 ++++++------------
 src/accountsservice/useraccount.h       |  9 ++++++---
 3 files changed, 18 insertions(+), 21 deletions(-)

diff --git a/src/accountsservice/accountsmanager.cpp b/src/accountsservice/accountsmanager.cpp
index 2fa357d..8f3d42a 100644
--- a/src/accountsservice/accountsmanager.cpp
+++ b/src/accountsservice/accountsmanager.cpp
@@ -51,13 +51,13 @@ AccountsManagerPrivate::~AccountsManagerPrivate()
 void AccountsManagerPrivate::_q_userAdded(const QDBusObjectPath &path)
 {
     Q_Q(AccountsManager);
-    emit q->userAdded(new UserAccount(path.path()));
+    emit q->userAdded(new UserAccount(path.path(), interface->connection()));
 }
 
 void AccountsManagerPrivate::_q_userDeleted(const QDBusObjectPath &path)
 {
     Q_Q(AccountsManager);
-    emit q->userDeleted(new UserAccount(path.path()));
+    emit q->userDeleted(new UserAccount(path.path(), interface->connection()));
 }
 
 /*!
@@ -117,7 +117,7 @@ UserAccount *AccountsManager::cacheUser(const QString &userName)
     QDBusObjectPath path = reply.argumentAt<0>();
     if (path.path().isEmpty())
         return Q_NULLPTR;
-    return new UserAccount(path.path());
+    return new UserAccount(path.path(), d->interface->connection());
 }
 
 /*!
@@ -169,7 +169,7 @@ UserAccountList AccountsManager::listCachedUsers()
 
     QList<QDBusObjectPath> value = reply.argumentAt<0>();
     for (int i = 0; i < value.size(); i++)
-        list.append(new UserAccount(value.at(i).path()));
+        list.append(new UserAccount(value.at(i).path(), d->interface->connection()));
 
     return list;
 }
@@ -197,7 +197,7 @@ UserAccount *AccountsManager::findUserById(uid_t uid)
     QDBusObjectPath path = reply.argumentAt<0>();
     if (path.path().isEmpty())
         return Q_NULLPTR;
-    return new UserAccount(path.path());
+    return new UserAccount(path.path(), d->interface->connection());
 }
 
 /*!
@@ -224,7 +224,7 @@ UserAccount *AccountsManager::findUserByName(const QString &userName)
     QDBusObjectPath path = reply.argumentAt<0>();
     if (path.path().isEmpty())
         return Q_NULLPTR;
-    return new UserAccount(path.path());
+    return new UserAccount(path.path(), d->interface->connection());
 }
 
 /*!
diff --git a/src/accountsservice/useraccount.cpp b/src/accountsservice/useraccount.cpp
index b6b011d..38f6672 100644
--- a/src/accountsservice/useraccount.cpp
+++ b/src/accountsservice/useraccount.cpp
@@ -56,16 +56,14 @@ UserAccountPrivate::UserAccountPrivate()
 /*!
     Constructs a UserAccount object for the currently logged in user.
 */
-UserAccount::UserAccount()
+UserAccount::UserAccount(const QDBusConnection &bus)
     : d_ptr(new UserAccountPrivate)
 {
     QString objectPath = QLatin1String("/org/freedesktop/Accounts/User") + QString::number(getuid());
 
     d_ptr->user =
         new OrgFreedesktopAccountsUserInterface(QLatin1String("org.freedesktop.Accounts"),
-                                                objectPath,
-                                                QDBusConnection::systemBus(),
-                                                this);
+                                                objectPath, bus, this);
     connect(d_ptr->user, SIGNAL(Changed()), this, SIGNAL(accountChanged()));
 }
 
@@ -74,16 +72,14 @@ UserAccount::UserAccount()
 
     \param uid User identifier.
 */
-UserAccount::UserAccount(uid_t uid)
+UserAccount::UserAccount(uid_t uid, const QDBusConnection &bus)
     : d_ptr(new UserAccountPrivate)
 {
     QString objectPath = QLatin1String("/org/freedesktop/Accounts/User") + QString::number(uid);
 
     d_ptr->user =
         new OrgFreedesktopAccountsUserInterface(QLatin1String("org.freedesktop.Accounts"),
-                                                objectPath,
-                                                QDBusConnection::systemBus(),
-                                                this);
+                                                objectPath, bus, this);
     connect(d_ptr->user, SIGNAL(Changed()), this, SIGNAL(accountChanged()));
 }
 
@@ -93,14 +89,12 @@ UserAccount::UserAccount(uid_t uid)
 
     \param objectPath Accounts Service object path for the user account.
 */
-UserAccount::UserAccount(const QString &objectPath)
+UserAccount::UserAccount(const QString &objectPath, const QDBusConnection &bus)
     : d_ptr(new UserAccountPrivate)
 {
     d_ptr->user =
         new OrgFreedesktopAccountsUserInterface(QLatin1String("org.freedesktop.Accounts"),
-                                                objectPath,
-                                                QDBusConnection::systemBus(),
-                                                this);
+                                                objectPath, bus, this);
     connect(d_ptr->user, SIGNAL(Changed()), this, SIGNAL(accountChanged()));
 }
 
diff --git a/src/accountsservice/useraccount.h b/src/accountsservice/useraccount.h
index 34acc4f..7e1bb87 100644
--- a/src/accountsservice/useraccount.h
+++ b/src/accountsservice/useraccount.h
@@ -29,6 +29,7 @@
 
 #include <QtCore/QObject>
 #include <QtCore/QString>
+#include <QtDBus/QDBusConnection>
 
 #include <qtaccountsservice/qtaccountsservice_export.h>
 
@@ -75,8 +76,9 @@ public:
         NonePasswordMode
     };
 
-    UserAccount();
-    explicit UserAccount(uid_t uid);
+    UserAccount(const QDBusConnection &bus = QDBusConnection::systemBus());
+    explicit UserAccount(uid_t uid,
+                         const QDBusConnection &bus = QDBusConnection::systemBus());
     ~UserAccount();
 
     uid_t userId() const;
@@ -161,7 +163,8 @@ private:
 
     Q_DECLARE_PRIVATE(UserAccount)
 
-    UserAccount(const QString &objectPath);
+    UserAccount(const QString &objectPath,
+                const QDBusConnection &bus = QDBusConnection::systemBus());
 };
 
 typedef QList<UserAccount *> UserAccountList;
-- 
1.9.5

